// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebClinic.Models;

namespace WebClinic.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190707180855_StatusPagamento")]
    partial class StatusPagamento
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebClinic.Models.Animal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cor")
                        .IsRequired();

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Especie")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<int>("PesoAproximado");

                    b.Property<string>("Porte")
                        .IsRequired();

                    b.Property<int>("ProprietarioID");

                    b.Property<string>("Raca")
                        .IsRequired();

                    b.Property<string>("Sexo")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("ProprietarioID");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("WebClinic.Models.Consulta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnimalID");

                    b.Property<decimal>("Custo");

                    b.Property<DateTime>("DataRealizacao");

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<int>("MedicoID");

                    b.Property<string>("Pagamento")
                        .IsRequired();

                    b.Property<string>("Status")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("AnimalID");

                    b.HasIndex("MedicoID");

                    b.ToTable("Consulta");
                });

            modelBuilder.Entity("WebClinic.Models.Exame", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnimalID");

                    b.Property<decimal>("Custo");

                    b.Property<DateTime>("DataRealizacao");

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<int>("MedicoID");

                    b.Property<string>("Pagamento")
                        .IsRequired();

                    b.Property<string>("Status")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("AnimalID");

                    b.HasIndex("MedicoID");

                    b.ToTable("Exame");
                });

            modelBuilder.Entity("WebClinic.Models.Medico", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired();

                    b.Property<string>("CRMV")
                        .IsRequired();

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Endereco")
                        .IsRequired();

                    b.Property<string>("Especialidade")
                        .IsRequired();

                    b.Property<string>("Especializacoes")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("Sobrenome")
                        .IsRequired();

                    b.Property<string>("Telefone")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("WebClinic.Models.Procedimento", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnimalID");

                    b.Property<DateTime>("DataRealizacao");

                    b.Property<int>("MedicoID");

                    b.Property<string>("Pagamento")
                        .IsRequired();

                    b.Property<string>("Status")
                        .IsRequired();

                    b.Property<int>("TipoProcedimentoID");

                    b.HasKey("ID");

                    b.HasIndex("AnimalID");

                    b.HasIndex("MedicoID");

                    b.HasIndex("TipoProcedimentoID");

                    b.ToTable("Procedimento");
                });

            modelBuilder.Entity("WebClinic.Models.Proprietario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired();

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Endereco")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("Sobrenome")
                        .IsRequired();

                    b.Property<string>("Telefone")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Proprietario");
                });

            modelBuilder.Entity("WebClinic.Models.TipoProcedimento", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Custo");

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("TipoProcedimento");
                });

            modelBuilder.Entity("WebClinic.Models.Animal", b =>
                {
                    b.HasOne("WebClinic.Models.Proprietario", "Proprietario")
                        .WithMany("Animais")
                        .HasForeignKey("ProprietarioID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebClinic.Models.Consulta", b =>
                {
                    b.HasOne("WebClinic.Models.Animal", "Animal")
                        .WithMany("Consultas")
                        .HasForeignKey("AnimalID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebClinic.Models.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebClinic.Models.Exame", b =>
                {
                    b.HasOne("WebClinic.Models.Animal", "Animal")
                        .WithMany("Exames")
                        .HasForeignKey("AnimalID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebClinic.Models.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebClinic.Models.Procedimento", b =>
                {
                    b.HasOne("WebClinic.Models.Animal", "Animal")
                        .WithMany("Procedimentos")
                        .HasForeignKey("AnimalID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebClinic.Models.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebClinic.Models.TipoProcedimento", "TipoProcedimento")
                        .WithMany()
                        .HasForeignKey("TipoProcedimentoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
